name: Go Release

on:
  push:
    tags:
      - 'v*'  # v1.0.0 등 tag push 시 실행
  workflow_dispatch:
    inputs:
      tag:
        description: '릴리스할 태그 (예: v1.0.0)'
        required: true

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: arm64
            goos: linux
          - goarch: arm
            goos: linux
            goarm: 7
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build
        run: |
          mkdir -p dist
          output_name="ip-notifier-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            export GOARM=${{ matrix.goarm }}
            output_name="${output_name}-v${{ matrix.goarm }}"
          fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/$output_name main.go

      - name: Archive binaries
        run: |
          cd dist
          for f in *; do
            tar -czvf "$f.tar.gz" "$f"
          done

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

